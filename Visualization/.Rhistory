}else if(args[2] == "02"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(R[0]))
}else if(args[2] == "02_treatment"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(alpha),expression(d[s]),expression(d[r]),expression(R[0]))
}else if(args[2] == "03"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(epsilon),expression(gamma))
}else if(args[2] == "01_s"){
l = c(expression(alpha),expression(phi),expression(mu[sr]),expression(mu[rs]),expression(r[1]),expression(r[2]),expression(sigma))
}else if(args[2] == "02_s"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(sigma))
}else if(args[2] == "03_s"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(epsilon),expression(gamma),expression(sigma))
}else {
print("Something is wrong...")
}
paste(c("The model parameters are: ", l), collapse=" ")
discrepancy <- 0  # is the last column of the data discrepancy of likelihood?
truelik <- 1  # use likelihood or log-likelihood for coloring
# ----------------------------------------------------------------------
print_tab <- function(text, x, nd, w) {
cat(text, formatC(x, digits=nd, format='e', width=w), "\n", sep="\t")
}
print_nd <- function(x, nd) {
cat(format(round(x, digits=nd), nsmall=nd))
}
cat("Reading file", fname,"\n")
data <- read.table(fname)
data <- array(data=unlist(data), dim=dim(data))
nd <- dim(data)[2]  # dimension of the samples
# mean
md <- colMeans(data[, 1:nd-1])
print_tab("means:\t", md, 4, 8)
# standard deviation
m2d <- colMeans(data[, 1:nd-1]^2)
sd <- sqrt(m2d-md^2)
print_tab("stds:\t", sd, 4, 8)
# most probable parameters
best_id <- which.max(data[, nd-1])
best <- data[best_id, 1:nd-1]
print_tab("MPVs:\t", best, 4, 8)
# quantiles
q1 <- c(); for (i in seq(1, nd-1)) q1[i] <- quantile(data[, i], probs=c(0.05))
print_tab("q-0.05:  ", q1, 4, 8)
q2 <- c(); for (i in seq(1, nd-1)) q2[i] <- quantile(data[, i], probs=c(0.95))
print_tab("q-0.95:  ", q2, 4, 8)
# print table
fname <- paste0(file_path_sans_ext(fname), "_tmcmc_params.txt")
sink(fname)
print_tab("means:", md, 4, 8)
print_tab("stds:", sd, 4, 8)
print_tab("MPVs:", best, 4, 8)
print_tab("q+0.05:", q1, 4, 8)
print_tab("q-0.95:", q2, 4, 8)
sink()
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
print(ci_eti)
sink()
# print for latex table
a <- c(); digits <- 3
for (i in seq(1, nd-1)) {
t <- capture.output(cat(print_nd(md[i], digits)))
a <- paste(c(a, t), collapse = "")
a <- paste(c(a, " & ["), collapse = "")
t <- capture.output(cat(print_nd(q1[i], digits)))
a <- paste(c(a, t), collapse = "")
a <- paste(c(a, ", "), collapse = "")
t <- capture.output(cat(print_nd(q2[i], digits)))
a <- paste(c(a, t), collapse = "")
a <- paste(c(a, "] & "), collapse = "")
}
#write.table(a, file=fres,sep = "\t", row.names = T)
a <- capture.output(cat(substr(a, 1, nchar(a)-3)))
a <- paste("latex:", a)
a <- paste(a, "\\\\ \n")
cat(a)
if(discrepancy) data[, nd] <-    -data[, nd]
if(truelik)     data[, nd] <- exp(data[, nd])
source("helpers/kde_ggpairs.R")
pname <- paste0(file_path_sans_ext(fname), ".png")
png(pname, width=2500, height=2500, units='px', res=300, pointsize=15, type="cairo", family="times")
kdeggpairs(dat, n_1d=20, n_2d=200, labels=l) #n_2d=200
dev.off()
source("helpers/kde_ggpairs.R")
pname <- paste0(file_path_sans_ext(fname), ".png")
png(pname, width=2500, height=2500, units='px', res=300, pointsize=15, type="cairo", family="times")
kdeggpairs(dat, n_1d=20, n_2d=200, labels=l) #n_2d=200
dev.off()
source("helpers/kde_ggpairs.R")
pname <- paste0(file_path_sans_ext(fname), ".png")
png(pname, width=2500, height=2500, units='px', res=300, pointsize=15, type="cairo", family="times")
kdeggpairs(dat, n_1d=20, n_2d=200, labels=l) #n_2d=200
source("helpers/kde_ggpairs.R")
pname <- paste0(file_path_sans_ext(fname), ".png")
png(pname, width=2500, height=2500, units='px', res=300, pointsize=15, type="cairo", family="times")
kdeggpairs(dat, n_1d=20, n_2d=200, labels=l) #n_2d=200
dev.off()
source("helpers/kde_ggpairs.R")
pname <- paste0(file_path_sans_ext(fname), ".png")
png(pname, width=2500, height=2500, units='px', res=300, pointsize=15, type="cairo", family="times")
kdeggpairs(dat, n_1d=20, n_2d=200, labels=l) #n_2d=200
dev.off()
source("helpers/kde_ggpairs.R")
pname <- paste0(file_path_sans_ext(fname), ".png")
png(pname, width=2500, height=2500, units='px', res=300, pointsize=15, type="cairo", family="times")
kdeggpairs(dat, n_1d=20, n_2d=200, labels=l) #n_2d=200
dev.off()
source("helpers/kde_ggpairs.R")
pname <- paste0(file_path_sans_ext(fname), ".png")
png(pname, width=2500, height=2500, units='px', res=300, pointsize=15, type="cairo", family="times")
kdeggpairs(dat, n_1d=20, n_2d=200, labels=l) #n_2d=200
dev.off()
dat<data.frame(data)
dat<-data.frame(data)
library(bayestestR)
c1 <- ci(dat[,1])
c1
View(c1)
ci_eti <- ci(dat[,1])
print(c(ci_eti$CI_low), " ", ci_eti$CI_high)
print(ci_eti$CI_low)
print(ci_eti$CI_low, ci_eti$CI_high)
print(c(ci_eti$CI_low, ci_eti$CI_high))
#!/usr/bin/env Rscript
#source("helpers/kdepairs.default.R")
#source("helpers/kdepairs.R")
source("helpers/kde_ggpairs.R")
library(tools)
library(bayestestR)
cat("Did you delete all the variables you wanted? If no, run 'rm(list=ls())'\n")
args = commandArgs(trailingOnly=TRUE)
fname <- args[1]
fname <- "../Summary/DSR00_RUN_1_C33A_controls_Rall_obs_sigma/Calibration/final.txt"
l = c(expression(r[g]),expression(K))
if(args[2] == "00"){
l = c(expression(r[g]),expression(K))
}else if(args[2] == "00_treatment"){
l = c(expression(r[g]),expression(K),expression(u[eff]))
}else if(args[2] == "00_treatment_expanded"){
l = c(expression(r[g]),expression(K),expression(u[eff]))
}else if(args[2] == "00_treatment_expanded_inv" || args[2] == "00_treatment_expanded_sym"){
l = c(expression(r[g]),expression(K),expression(u[eff]))
}else if(args[2] == "G00"){
l = c(expression(r[g]),expression(K),expression(theta))
}else if(args[2] == "F00"){
l = c(expression(r[g]),expression(K),expression(alpha))
}else if(args[2] == "F00_treatment" || args[2] == "F00_treatment_expanded_inv"|| args[2] == "F00_treatment_expanded_sym"){
l = c(expression(r[g]),expression(K),expression(u[eff]),expression(alpha))
}else if(args[2] == "F01_treatment_expanded_inv" || args[2] == "F01_treatment_expanded"){
l = c(expression(r[g]),expression(u[eff]),expression(alpha))
}else if(args[2] == "01"){
l = c(expression(alpha),expression(phi),expression(mu[sr]),expression(mu[rs]),expression(r[1]),expression(r[2]))
}else if(args[2] == "02"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(R[0]))
}else if(args[2] == "02_treatment"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(alpha),expression(d[s]),expression(d[r]),expression(R[0]))
}else if(args[2] == "03"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(epsilon),expression(gamma))
}else if(args[2] == "01_s"){
l = c(expression(alpha),expression(phi),expression(mu[sr]),expression(mu[rs]),expression(r[1]),expression(r[2]),expression(sigma))
}else if(args[2] == "02_s"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(sigma))
}else if(args[2] == "03_s"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(epsilon),expression(gamma),expression(sigma))
}else {
print("Something is wrong...")
}
paste(c("The model parameters are: ", l), collapse=" ")
discrepancy <- 0  # is the last column of the data discrepancy of likelihood?
truelik <- 1  # use likelihood or log-likelihood for coloring
# ----------------------------------------------------------------------
print_tab <- function(text, x, nd, w) {
cat(text, formatC(x, digits=nd, format='e', width=w), "\n", sep="\t")
}
print_nd <- function(x, nd) {
cat(format(round(x, digits=nd), nsmall=nd))
}
cat("Reading file", fname,"\n")
data <- read.table(fname)
data <- array(data=unlist(data), dim=dim(data))
nd <- dim(data)[2]  # dimension of the samples
# mean
md <- colMeans(data[, 1:nd-1])
print_tab("means:\t", md, 4, 8)
# standard deviation
m2d <- colMeans(data[, 1:nd-1]^2)
sd <- sqrt(m2d-md^2)
print_tab("stds:\t", sd, 4, 8)
# most probable parameters
best_id <- which.max(data[, nd-1])
best <- data[best_id, 1:nd-1]
print_tab("MPVs:\t", best, 4, 8)
# quantiles
q1 <- c(); for (i in seq(1, nd-1)) q1[i] <- quantile(data[, i], probs=c(0.05))
print_tab("q-0.05:  ", q1, 4, 8)
q2 <- c(); for (i in seq(1, nd-1)) q2[i] <- quantile(data[, i], probs=c(0.95))
print_tab("q-0.95:  ", q2, 4, 8)
# print table
fname <- paste0(file_path_sans_ext(fname), "_tmcmc_params.txt")
sink(fname)
print_tab("means:", md, 4, 8)
print_tab("stds:", sd, 4, 8)
print_tab("MPVs:", best, 4, 8)
print_tab("q+0.05:", q1, 4, 8)
print_tab("q-0.95:", q2, 4, 8)
sink()
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
print(c(ci_eti$CI_low, ci_eti$CI_high))
sink()
# print for latex table
a <- c(); digits <- 3
for (i in seq(1, nd-1)) {
t <- capture.output(cat(print_nd(md[i], digits)))
a <- paste(c(a, t), collapse = "")
a <- paste(c(a, " & ["), collapse = "")
t <- capture.output(cat(print_nd(q1[i], digits)))
a <- paste(c(a, t), collapse = "")
a <- paste(c(a, ", "), collapse = "")
t <- capture.output(cat(print_nd(q2[i], digits)))
a <- paste(c(a, t), collapse = "")
a <- paste(c(a, "] & "), collapse = "")
}
#write.table(a, file=fres,sep = "\t", row.names = T)
a <- capture.output(cat(substr(a, 1, nchar(a)-3)))
a <- paste("latex:", a)
a <- paste(a, "\\\\ \n")
cat(a)
if(discrepancy) data[, nd] <-    -data[, nd]
if(truelik)     data[, nd] <- exp(data[, nd])
source("helpers/kde_ggpairs.R")
pname <- paste0(file_path_sans_ext(fname), ".png")
png(pname, width=2500, height=2500, units='px', res=300, pointsize=15, type="cairo", family="times")
kdeggpairs(dat, n_1d=20, n_2d=200, labels=l) #n_2d=200
dev.off()
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in 1:(nd-1))
print(c(ci_eti$CI_low[i], ci_eti$CI_high[i]))
sink()
ci_eti$Parameter
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in 1:(nd-1))
print(c(ci_eti$Parameter[i], ci_eti$CI_low[i], ci_eti$CI_high[i]))
sink()
md
?print_tab()
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in 1:(nd-1))
print_tab(ci_eti$Parameter[i], ci_eti$CI_low[i], ci_eti$CI_high[i],4,8)
ci_eti
ci_eti
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
ci_eti
View(ci_eti)
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in 1:(nd-1))
print_tab(ci_eti)
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in 1:(nd-1))
print_tab(x=ci_eti)
print_tab(ci_eti)
print(ci_eti)
sink()
print(ci_eti)
View(ci_eti)
print_tab(ci_eti)
write.table(fname1,ci_eti)
write.table(ci_eti,fname1,sep = "\t")
View(ci_eti)
write.table(ci_eti,fname1,sep = "\t",row.names=FALSE)
write.table(ci_eti,fname1,sep = "\t",row.names=TRUE)
View(ci_eti)
write.table(c1,fname1,sep = "\t",row.names=TRUE)
print(ci_eti[i,])
i=1
print(ci_eti[i,])
t<-print(ci_eti[i,])
View(t)
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
print(ci_eti[i,])
sink()
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
print(ci_eti[i,])
ci_eti[2,]
t<-ci_eti[2,]
t
View(t)
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
t<-ci_eti[i,]
print(t)
sink()
as.table(ci_eti)
print_tab("means:", md, 4, 8)
View(ci_eti)
typeof(ci_eti)
sink()
typeof(ci_eti)
#!/usr/bin/env Rscript
#source("helpers/kdepairs.default.R")
#source("helpers/kdepairs.R")
source("helpers/kde_ggpairs.R")
library(tools)
library(bayestestR)
cat("Did you delete all the variables you wanted? If no, run 'rm(list=ls())'\n")
args = commandArgs(trailingOnly=TRUE)
fname <- args[1]
fname <- "../Summary/DSR00_RUN_1_C33A_controls_Rall_obs_sigma/Calibration/final.txt"
l = c(expression(r[g]),expression(K))
if(args[2] == "00"){
l = c(expression(r[g]),expression(K))
}else if(args[2] == "00_treatment"){
l = c(expression(r[g]),expression(K),expression(u[eff]))
}else if(args[2] == "00_treatment_expanded"){
l = c(expression(r[g]),expression(K),expression(u[eff]))
}else if(args[2] == "00_treatment_expanded_inv" || args[2] == "00_treatment_expanded_sym"){
l = c(expression(r[g]),expression(K),expression(u[eff]))
}else if(args[2] == "G00"){
l = c(expression(r[g]),expression(K),expression(theta))
}else if(args[2] == "F00"){
l = c(expression(r[g]),expression(K),expression(alpha))
}else if(args[2] == "F00_treatment" || args[2] == "F00_treatment_expanded_inv"|| args[2] == "F00_treatment_expanded_sym"){
l = c(expression(r[g]),expression(K),expression(u[eff]),expression(alpha))
}else if(args[2] == "F01_treatment_expanded_inv" || args[2] == "F01_treatment_expanded"){
l = c(expression(r[g]),expression(u[eff]),expression(alpha))
}else if(args[2] == "01"){
l = c(expression(alpha),expression(phi),expression(mu[sr]),expression(mu[rs]),expression(r[1]),expression(r[2]))
}else if(args[2] == "02"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(R[0]))
}else if(args[2] == "02_treatment"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(alpha),expression(d[s]),expression(d[r]),expression(R[0]))
}else if(args[2] == "03"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(epsilon),expression(gamma))
}else if(args[2] == "01_s"){
l = c(expression(alpha),expression(phi),expression(mu[sr]),expression(mu[rs]),expression(r[1]),expression(r[2]),expression(sigma))
}else if(args[2] == "02_s"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(sigma))
}else if(args[2] == "03_s"){
l = c(expression(r[s]),expression(r[r]),expression(K),expression(epsilon),expression(gamma),expression(sigma))
}else {
print("Something is wrong...")
}
paste(c("The model parameters are: ", l), collapse=" ")
discrepancy <- 0  # is the last column of the data discrepancy of likelihood?
truelik <- 1  # use likelihood or log-likelihood for coloring
# ----------------------------------------------------------------------
print_tab <- function(text, x, nd, w) {
cat(text, formatC(x, digits=nd, format='e', width=w), "\n", sep="\t")
}
print_nd <- function(x, nd) {
cat(format(round(x, digits=nd), nsmall=nd))
}
cat("Reading file", fname,"\n")
data <- read.table(fname)
data <- array(data=unlist(data), dim=dim(data))
nd <- dim(data)[2]  # dimension of the samples
# mean
md <- colMeans(data[, 1:nd-1])
print_tab("means:\t", md, 4, 8)
# standard deviation
m2d <- colMeans(data[, 1:nd-1]^2)
sd <- sqrt(m2d-md^2)
print_tab("stds:\t", sd, 4, 8)
# most probable parameters
best_id <- which.max(data[, nd-1])
best <- data[best_id, 1:nd-1]
print_tab("MPVs:\t", best, 4, 8)
# quantiles
q1 <- c(); for (i in seq(1, nd-1)) q1[i] <- quantile(data[, i], probs=c(0.05))
print_tab("q-0.05:  ", q1, 4, 8)
q2 <- c(); for (i in seq(1, nd-1)) q2[i] <- quantile(data[, i], probs=c(0.95))
print_tab("q-0.95:  ", q2, 4, 8)
# print table
fname <- paste0(file_path_sans_ext(fname), "_tmcmc_params.txt")
sink(fname)
print_tab("means:", md, 4, 8)
print_tab("stds:", sd, 4, 8)
print_tab("MPVs:", best, 4, 8)
print_tab("q+0.05:", q1, 4, 8)
print_tab("q-0.95:", q2, 4, 8)
sink()
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
typeof(ci_eti)
ci_eti
sprintf("%d %f %f", ci_eti$Parameter, ci_eti$CI_low, ci_eti$CI_high)
sprintf("%c %f %f", ci_eti$Parameter, ci_eti$CI_low, ci_eti$CI_high)
sprintf("%s %f %f", ci_eti$Parameter, ci_eti$CI_low, ci_eti$CI_high)
sprintf("%s %f %f", ci_eti$Parameter[1], ci_eti$CI_low[1], ci_eti$CI_high[1])
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
sprintf("%s %f %f", ci_eti$Parameter[i], ci_eti$CI_low[i], ci_eti$CI_high[i])
sink()
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
{
t<-sprintf("%s %f %f", ci_eti$Parameter[i], ci_eti$CI_low[i], ci_eti$CI_high[i])
print(t)
}
sink()
t=0
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
{
t<-sprintf("%s %f %f", ci_eti$Parameter[i], ci_eti$CI_low[i], ci_eti$CI_high[i])
print(t)
}
sink()
dat <- data.frame(data)
t=0
View(print_tab)
View(print_tab)
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
{
#t<-sprintf("%s %f %f", ci_eti$Parameter[i], ci_eti$CI_low[i], ci_eti$CI_high[i])
#print(t)
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
}
sink()
View(ci_eti)
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
{
#t<-sprintf("%s %f %f", ci_eti$Parameter[i], ci_eti$CI_low[i], ci_eti$CI_high[i])
#print(t)
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
}
sink()
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
sink()
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI",verbose = TRUE)
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
sink()
i=1
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI")
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (1:nd-2))
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
sink()
for(i in (1:nd-2))
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
View(print_tab)
for(i in (2:nd-2))
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
for(i in (3:nd-2))
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
dat <- data.frame(data)
colnames(dat) = l
ci_eti <- ci(dat,ci=0.95, method = "HDI")
fname1 <-paste0(file_path_sans_ext(fname), "_CI95.txt")
sink(fname1)
for(i in (3:nd-2))
print_tab(ci_eti$Parameter[i], c(ci_eti$CI_low[i], ci_eti$CI_high[i]), 4,8)
sink()
